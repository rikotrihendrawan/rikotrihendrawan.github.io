{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","components/Saveds/SavedList/SavedList.js","components/Saveds/SavedsChart/SavedsChart.js","components/Saveds/SavedsControls/SavedsControls.js","pages/Saveds.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Jobs/JobList/JobItem/JobItem.js","components/Jobs/JobList/JobList.js","pages/Jobs.js","pages/AddJobPage.js","components/Jobs/JobList/JobItem/JobSingleItem.js","components/Jobs/JobList/JobSingleList.js","pages/JobItem.js","pages/AboutPage.js","components/Navigation/MainNavigation.js","components/Navigation/Footer.js","App.js","index.js"],"names":["AuthContext","React","createContext","token","userId","email","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModeHandler","setState","prevState","submitHandler","e","preventDefault","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","concat","process","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","resData","data","context","history","alert","catch","err","console","log","createRef","path","push","react_default","a","createElement","className","onSubmit","htmlFor","type","id","placeholder","ref","onClick","Component","contextType","spinner","savedList","saveds","map","saved","key","_id","job","title","Date","createdAt","toLocaleDateString","onDelete","bind","SAVEDS_BUCKETS","Cheap","min","max","Normal","Expensive","savedsChart","chartData","labels","datasets","values","_loop","bucket","filteredSavedsCount","reduce","prev","wage","fillColor","strokeColor","highlightFill","highlightStroke","toConsumableArray","style","textAlign","react_chartjs","savedsControl","SavedsPage","isLoading","outputType","fetchSaveds","Authorization","deleteSavedHandler","savedId","filter","changeOutputTypeHandler","content","Spinner_Spinner","Fragment","SavedsControls_SavedsControls","activeOutputType","onChange","SavedList_SavedList","SavedsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","jobItem","jobId","Link","to","date","creatorId","jobList","jobs","JobItem_JobItem","authUserId","creator","onDetail","onViewDetail","JobsPage","creating","selectedJob","isActive","startCreateJobHandler","modalConfirmHandler","titleElRef","wageElRef","dateElRef","description","descriptionElRef","desc","updatedJobs","createJob","modalCancelHandler","showDetailHandler","find","savedJobHandler","fetchJobs","_this2","Backdrop_Backdrop","Modal_Modal","rows","JobList_JobList","JobSingleItem","auth_context","Consumer","toDateString","creatorEmail","onSaved","JobItem_JobSingleItem","JobItemPage","match","params","JobSingleList","AboutPage","mainNavigation","closeMobileMenuHandler","el","document","getElementById","el2","classList","contains","remove","add","left","fill","viewBox","xlinkHref","NavLink","position","paddingLeft","class","top","data-token-length","toggleMobileMenuHandler","action","role","noValidate","name","Footer","marginBottom","target","rel","href","App","BrowserRouter","Provider","Navigation_MainNavigation","Switch","Redirect","from","exact","Route","component","AddJobPage","JobItem","Navigation_Footer","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.5f6e90f7.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthContext = React.createContext({\n  token: null,\n  userId: null,\n  email: null,\n  login: (token, userId, email, tokenExpiration) => {},\n  logout: () => {},\n});\n\n// export const UserProvider = AuthContext.Provider;\n// export const UserConsumer = AuthContext.Consumer;\n\nexport default AuthContext;\n","import React, { Component } from 'react';\n\nimport './Auth.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true,\n  };\n\n  history(path) {\n    this.props.history.push(path);\n  }\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState((prevState) => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    // this.setState({ ...this.state, isLoading: true });\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            email\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password,\n      },\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: {email: $email, password: $password}) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password,\n        },\n      };\n    }\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log('resData.data:', resData.data);\n        if (this.state.isLogin) {\n          if (resData.data.login.token) {\n            this.context.login(\n              resData.data.login.token,\n              resData.data.login.userId,\n              resData.data.login.email,\n              resData.data.login.tokenExpiration\n            );\n          }\n          // console.log('resData.data.login:', resData.data.login);\n          this.history('/jobs');\n        } else {\n          alert('Create account succeed, please login now..');\n          this.history('/auth');\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className='auth-form' onSubmit={this.submitHandler}>\n        <h2>{this.state.isLogin ? 'Login' : 'Signup'}</h2>\n        <div className='form-control'>\n          <label htmlFor='email'>Email</label>\n          <input\n            type='email'\n            id='email'\n            placeholder='Enter email'\n            ref={this.emailEl}\n          />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            id='password'\n            placeholder='Enter password'\n            ref={this.passwordEl}\n          />\n        </div>\n        <div className='form-actions'>\n          <button className='text-white eric-button' type='submit'>\n            Submit\n          </button>\n          <button\n            type='button'\n            className='transparent'\n            onClick={this.switchModeHandler}\n          >\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}?\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => <div id='loading-spinner' />;\n\nexport default spinner;\n","import React from 'react';\n\nimport './SavedList.css';\n\nconst savedList = (props) => (\n  <ul className='saveds__list'>\n    {props.saveds.map((saved) => {\n      return (\n        <li key={saved._id} className='saveds__item'>\n          <div className='saveds__item-data'>\n            {saved.job.title} - {new Date(saved.createdAt).toLocaleDateString()}\n          </div>\n          <div className='saveds__item-actions'>\n            <button\n              className='eric-button'\n              onClick={props.onDelete.bind(this, saved._id)}\n            >\n              Remove\n            </button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default savedList;\n","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst SAVEDS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100,\n  },\n  Normal: {\n    min: 100,\n    max: 200,\n  },\n  Expensive: {\n    min: 200,\n    max: 10000000,\n  },\n};\n\nconst savedsChart = (props) => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in SAVEDS_BUCKETS) {\n    const filteredSavedsCount = props.saveds.reduce((prev, current) => {\n      if (\n        current.job.wage > SAVEDS_BUCKETS[bucket].min &&\n        current.job.wage < SAVEDS_BUCKETS[bucket].max\n      ) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredSavedsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values,\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default savedsChart;\n","import React from 'react';\n\nimport './SavedsControls.css';\n\nconst savedsControl = (props) => {\n  return (\n    <div className='saveds-control'>\n      <h2>Your Saved Jobs</h2>\n      {/* <button\n        className={props.activeOutputType === 'list' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'list')}\n      >\n        List\n      </button> */}\n      {/* <button\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'chart')}\n      >\n        Chart\n      </button> */}\n    </div>\n  );\n};\n\nexport default savedsControl;\n","import React, { Component } from 'react';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport SavedList from '../components/Saveds/SavedList/SavedList';\nimport SavedsChart from '../components/Saveds/SavedsChart/SavedsChart';\nimport SavedsControls from '../components/Saveds/SavedsControls/SavedsControls';\n\nclass SavedsPage extends Component {\n  state = {\n    isLoading: false,\n    saveds: [],\n    outputType: 'list',\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchSaveds();\n  }\n\n  fetchSaveds = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            saveds {\n              _id\n             createdAt\n             job {\n               _id\n               title\n               date\n               wage\n             }\n            }\n          }\n        `,\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed! ' + res.json());\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const saveds = resData.data.saveds;\n        this.setState({ saveds: saveds, isLoading: false });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  deleteSavedHandler = (savedId) => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          mutation CancelSaved($id: ID!) {\n            cancelSaved(savedId: $id) {\n            _id\n             title\n            }\n          }\n        `,\n      variables: {\n        id: savedId,\n      },\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState((prevState) => {\n          const updatedSaveds = prevState.saveds.filter((saved) => {\n            return saved._id !== savedId;\n          });\n          return { saveds: updatedSaveds, isLoading: false };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  changeOutputTypeHandler = (outputType) => {\n    if (outputType === 'list') {\n      this.setState({ outputType: 'list' });\n    } else {\n      this.setState({ outputType: 'chart' });\n    }\n  };\n\n  render() {\n    let content = <Spinner />;\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <SavedsControls\n            activeOutputType={this.state.outputType}\n            onChange={this.changeOutputTypeHandler}\n          />\n          <div>\n            {this.state.outputType === 'list' ? (\n              <SavedList\n                saveds={this.state.saveds}\n                onDelete={this.deleteSavedHandler}\n              />\n            ) : (\n              <SavedsChart saveds={this.state.saveds} />\n            )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nexport default SavedsPage;\n","import React from 'react';\n\nimport './Modal.css';\n\nconst modal = (props) => (\n  <div className={`modal ${props.className}`}>\n    <header className='modal__header'>\n      <h1>{props.title}</h1>\n    </header>\n    <section className='modal__content'>{props.children}</section>\n    <section className='modal__actions'>\n      {props.canCancel && (\n        <button className='btn' onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className='text-white eric-button' onClick={props.onConfirm}>\n          {props.confirmText}\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n  <div className='backdrop' onClick={props.onCancel} />\n);\n\nexport default backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './JobItem.css';\n\nconst jobItem = (props) => (\n  <li key={props.jobId} className='jobs__list-item'>\n    <div className='list__heading'>\n      <h1>\n        <Link to={`/job/${props.jobId}`}>{props.title}</Link>\n      </h1>\n      <h2>\n        {props.wage} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div className='list__links'>\n      {props.userId === props.creatorId ? (\n        <Link className='eric-button transparent' to={`/job/${props.jobId}`}>\n          You Posted This\n        </Link>\n      ) : (\n        <Link className='text-white eric-button' to={`/job/${props.jobId}`}>\n          View Job Details\n        </Link>\n      )}\n    </div>\n  </li>\n);\n\nexport default jobItem;\n","import React from 'react';\n\nimport JobItem from './JobItem/JobItem';\nimport './JobList.css';\n\nconst jobList = (props) => {\n  const jobs = props.jobs.map((job) => {\n    return (\n      <JobItem\n        key={job._id}\n        jobId={job._id}\n        title={job.title}\n        wage={job.wage}\n        date={job.date}\n        userId={props.authUserId}\n        creatorId={job.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return <ul className='job__list'>{jobs}</ul>;\n};\n\nexport default jobList;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport JobList from '../components/Jobs/JobList/JobList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Jobs.css';\n\nclass JobsPage extends Component {\n  state = {\n    creating: false,\n    jobs: [],\n    isLoading: false,\n    selectedJob: null,\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.wageElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchJobs();\n    // console.log('Job.js loaded..');\n  }\n\n  startCreateJobHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const wage = this.wageElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      wage.trim().length === 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const job = { title, wage, date, description };\n    // console.log(job);\n\n    const requestBody = {\n      query: `\n          mutation CreateJob($title: String!, $desc: String!, $wage: String!, $date: String!) {\n            createJob(jobInput: {title: $title, description: $desc, wage: $wage, date: $date}) {\n              _id\n              title\n              description\n              date\n              wage\n            }\n          }\n        `,\n      variables: {\n        title: title,\n        desc: description,\n        wage: wage,\n        date: date,\n      },\n    };\n\n    const token = this.context.token;\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState((prevState) => {\n          const updatedJobs = [...prevState.jobs];\n          updatedJobs.push({\n            _id: resData.data.createJob._id,\n            title: resData.data.createJob.title,\n            description: resData.data.createJob.description,\n            date: resData.data.createJob.date,\n            wage: resData.data.createJob.wage,\n            creator: {\n              _id: this.context.userId,\n            },\n          });\n          return { jobs: updatedJobs };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedJob: null });\n  };\n\n  fetchJobs() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            jobs {\n              _id\n              title\n              description\n              date\n              wage\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `,\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const jobs = resData.data.jobs;\n        // console.log('List jobs: ', jobs);\n        if (this.isActive) {\n          this.setState({ jobs: jobs, isLoading: false });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = (jobId) => {\n    this.setState((prevState) => {\n      const selectedJob = prevState.jobs.find((e) => {\n        // console.log('id: ', e._id);\n        return e._id === jobId;\n      });\n\n      return { selectedJob: selectedJob };\n    });\n  };\n\n  savedJobHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedJob: null });\n      return;\n    }\n    // console.log(this.state.selectedJob);\n    const requestBody = {\n      query: `\n          mutation SavedJob($id: ID!) {\n            savedJob(jobId: $id) {\n              _id\n             createdAt\n             updatedAt\n            }\n          }\n        `,\n      variables: {\n        id: this.state.selectedJob._id,\n      },\n    };\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log(resData);\n        this.setState({ selectedJob: null });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedJob) && (\n          <Backdrop onCancel={this.modalCancelHandler} />\n        )}\n        {this.state.creating && (\n          <Modal\n            title='Add Job'\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText='Confirm'\n            className='show'\n          >\n            <form>\n              <div className='form-control'>\n                <label htmlFor='title'>Title</label>\n                <input type='text' id='title' ref={this.titleElRef} />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='date'>Date</label>\n                <input type='datetime-local' id='date' ref={this.dateElRef} />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='description'>Description</label>\n                <textarea\n                  id='description'\n                  rows='4'\n                  ref={this.descriptionElRef}\n                />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='wage'>Salary</label>\n                <input type='text' id='wage' ref={this.wageElRef} />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedJob && (\n          <Modal\n            title={this.state.selectedJob.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.savedJobHandler}\n            confirmText={\n              this.context.token ? 'Save Job' : 'Login / Signup to Save'\n            }\n            className='show'\n          >\n            <h1>{this.state.selectedJob.title}</h1>\n            <h2>\n              {this.state.selectedJob.wage} -{' '}\n              {new Date(this.state.selectedJob.date).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedJob.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className='jobs-control'>\n            <p>List Your New Job Opening Here!</p>\n            <Link to='/job/add' className='text-white eric-button'>\n              Add Job Opening\n            </Link>\n          </div>\n        )}\n        {!this.context.token && (\n          <div className='jobs-control'>\n            <p>List Your New Job Opening Here!</p>\n            <Link to='/auth' className='text-white eric-button'>\n              Signup / Login to Add Job Opening\n            </Link>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <JobList\n            jobs={this.state.jobs}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default JobsPage;\n","import React, { Component } from 'react';\n// import { history } from '';\n\nimport AuthContext from '../context/auth-context';\nimport './Jobs.css';\n\nclass JobsPage extends Component {\n  state = {\n    creating: true,\n    jobs: [],\n    isLoading: false,\n    selectedJob: null,\n  };\n  isActive = true;\n\n  history(path) {\n    this.props.history.push(path);\n  }\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.wageElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // this.fetchJobs();\n    // this.modalConfirmHandler();\n  }\n\n  startCreateJobHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = (e) => {\n    e.preventDefault();\n\n    // this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const wage = this.wageElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      wage.trim().length === 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const job = { title, wage, date, description };\n    // console.log(job);\n\n    const requestBody = {\n      query: `\n          mutation CreateJob($title: String!, $desc: String!, $wage: String!, $date: String!) {\n            createJob(jobInput: {title: $title, description: $desc, wage: $wage, date: $date}) {\n              _id\n              title\n              description\n              date\n              wage\n            }\n          }\n        `,\n      variables: {\n        title: title,\n        desc: description,\n        wage: wage,\n        date: date,\n      },\n    };\n\n    const token = this.context.token;\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState((prevState) => {\n          const updatedJobs = [...prevState.jobs];\n          updatedJobs.push({\n            _id: resData.data.createJob._id,\n            title: resData.data.createJob.title,\n            description: resData.data.createJob.description,\n            date: resData.data.createJob.date,\n            wage: resData.data.createJob.wage,\n            creator: {\n              _id: this.context.userId,\n            },\n          });\n          this.history('/jobs');\n\n          return { jobs: updatedJobs };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedJob: null });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.creating && (\n          <div\n            className='job__page'\n            // title='Add Job'\n            // onCancel={this.modalCancelHandler}\n            // onConfirm={this.modalConfirmHandler}\n            // confirmText='Confirm'\n            // className='show'\n          >\n            <form onSubmit={this.modalConfirmHandler}>\n              <h1>Add New Job Opening</h1>\n              <div className='form-control'>\n                <label htmlFor='title'>Title*</label>\n                <input type='text' id='title' ref={this.titleElRef} />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='date'>Date*</label>\n                <input type='date' id='date' ref={this.dateElRef} />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='description'>Job Description*</label>\n                <textarea\n                  id='description'\n                  rows='18'\n                  ref={this.descriptionElRef}\n                />\n              </div>\n              <div className='form-control'>\n                <label htmlFor='wage'>Salary*</label>\n                <input type='text' id='wage' ref={this.wageElRef} />\n              </div>\n              <button className='text-white eric-button' type='submit'>\n                Submit\n              </button>\n            </form>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default JobsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../../../context/auth-context';\nimport './JobItem.css';\n\nconst JobSingleItem = (props) => (\n  <AuthContext.Consumer>\n    {(context) => {\n      // console.log(context);\n      return (\n        <li key={props.jobId} className='jobs__list-item'>\n          <div className='job__item single'>\n            <h1>{props.title}</h1>\n            <h2 className='wage'>{props.wage}</h2>\n            <p className='date'>{new Date(+props.date).toDateString()}</p>\n            <p>{props.description}</p>\n\n            <p>\n              Poster: {props.creatorId} / {props.creatorEmail}\n            </p>\n\n            {/* <Link to={`/job/${props.jobId}`}>Job Page &gt;</Link> */}\n            {context.token && (\n              <button\n                className='text-white eric-button right'\n                onClick={props.onSaved.bind(null, props.jobId)}\n              >\n                Save This Job\n              </button>\n            )}\n            {!context.token && (\n              <p>\n                <Link to='/auth' className='text-white eric-button right'>\n                  Login / Signup to Save This Job\n                </Link>\n              </p>\n            )}\n          </div>\n        </li>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default JobSingleItem;\n","import React from 'react';\n\nimport JobSingleItem from './JobItem/JobSingleItem';\nimport './JobList.css';\n\nconst jobList = (props) => {\n  const jobs = props.jobs.map((job) => {\n    return (\n      <JobSingleItem\n        key={job._id}\n        jobId={job._id}\n        title={job.title}\n        wage={job.wage}\n        description={job.description}\n        date={job.date}\n        userId={props.authUserId}\n        creatorId={job.creator._id}\n        creatorEmail={job.creator.email}\n        onDetail={props.onViewDetail}\n        onSaved={props.onSaved}\n      />\n    );\n  });\n\n  return <ul className='job__list'>{jobs}</ul>;\n};\n\nexport default jobList;\n","import React, { Component } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// import Modal from '../components/Modal/Modal';\r\n// import Backdrop from '../components/Backdrop/Backdrop';\r\nimport JobSingleList from '../components/Jobs/JobList/JobSingleList';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\nimport './Jobs.css';\r\n\r\nclass JobItemPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    jobs: [],\r\n    isLoading: false,\r\n    selectedJob: null,\r\n  };\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  /*\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.wageElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n*/\r\n  componentDidMount() {\r\n    this.fetchJobs();\r\n    // console.log('didmount this.state.jobs:', this.state.jobs);\r\n\r\n    // console.log('jobId:', this.jobId);\r\n  }\r\n\r\n  startCreateJobHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  fetchJobs() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const { jobId } = this.props.match.params;\r\n\r\n    // console.log('jobId :', jobId);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            jobItem(jobId: \"${jobId}\") {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              wage\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n    // console.log('requestBody:', JSON.stringify(requestBody));\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed: ' + res.status);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        // console.log('resData:', resData);\r\n        const job = resData.data.jobItem;\r\n        // console.log('job: ', job);\r\n        if (this.isActive) {\r\n          this.setState({\r\n            jobs: [job],\r\n            selectedJob: job._id,\r\n            isLoading: false,\r\n          });\r\n        }\r\n\r\n        // this.setState((prevState) => {\r\n        //   const updatedJobs = [];\r\n        //   const job = resData.data.jobItem;\r\n        //   updatedJobs.push(job);\r\n        //   // return { jobs: updatedJobs };\r\n        // });\r\n\r\n        // console.log('this.state: ', this.state);\r\n        // return this.state;\r\n      })\r\n      .catch((err) => {\r\n        console.log('err:', err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  savedJobHandler = (jobId) => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedJob: null });\r\n      return;\r\n    }\r\n    this.setState({ selectedJob: jobId });\r\n\r\n    // console.log('this.state.selectedJob: ', this.state.selectedJob);\r\n    const requestBody = {\r\n      query: `\r\n          mutation SavedJob($id: ID!) {\r\n            savedJob(jobId: $id) {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: jobId /*this.state.selectedJob._id,*/,\r\n      },\r\n    };\r\n\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/graphql`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        // console.log('resData: ', resData);\r\n        this.setState({ selectedJob: null });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <JobSingleList\r\n            jobs={this.state.jobs}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n            onSaved={this.savedJobHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JobItemPage;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className='job__page'>\n          <h1>About JobBoard App</h1>\n\n          <p>\n            This app was created as a playground with React.js on the frontend\n            side, Node.js on the backend side, utilizing the amazing GraphQL as\n            the backend API and MongoDB as the backend.\n          </p>\n\n          <p>\n            Frontend site-wide state management was provided by React Context.\n          </p>\n\n          <p>\n            Authentication was created using JWT (JSON Web Token) where a signed\n            token was generated for a logged-in user.\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\n// import AuthContext from '../../context/auth-context';\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\nclass mainNavigation extends Component {\n  // state = {\n  //   currentMobileMenu: '',\n  // };\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    this.closeMobileMenuHandler();\n  }\n\n  componentWillUnmount() {}\n\n  toggleMobileMenuHandler() {\n    const el = document.getElementById('site-mobile-menu-toggle');\n    const el2 = document.getElementById('site-navigation');\n\n    if (!el.classList.contains('eric-open')) {\n      el.classList.add('eric-open');\n      el2.classList.add('eric-open');\n    } else {\n      el.classList.remove('eric-open');\n      el2.classList.remove('eric-open');\n    }\n  }\n  closeMobileMenuHandler() {\n    const el = document.getElementById('site-mobile-menu-toggle');\n    const el2 = document.getElementById('site-navigation');\n\n    el.classList.remove('eric-open');\n    el2.classList.remove('eric-open');\n  }\n\n  render() {\n    // console.log(context);\n    return (\n      <AuthContext.Consumer>\n        {(context) => {\n          return (\n            <section id='site-header-2022'>\n              <div id='site-header-inner'>\n                <header style={{ left: '0px' }}>\n                  <Link to='/' id='site-logo'>\n                    <svg\n                      fill='#181818'\n                      viewBox='0 0 100 100'\n                      className='svg-icon size-med icon-cloud-arrow-up'\n                    >\n                      <use xlinkHref='#icon-cloud-arrow-up' />\n                    </svg>\n                    JobsboardApp\n                  </Link>\n\n                  <nav id='site-navigation'>\n                    <ul id='site-primary-menu' className='menu'>\n                      <li className='current-menu-parent menu-item-has-children'>\n                        <NavLink to='/jobs'>\n                          <span>Jobs List</span>\n                        </NavLink>\n                      </li>\n                      {!context.token && (\n                        <li\n                          className='current-menu-parent menu-item-has-children'\n                          style={{ position: 'relative', paddingLeft: '30px' }}\n                        >\n                          <svg\n                            class='svg-icon icon-user'\n                            style={{\n                              position: 'absolute',\n                              left: '20px',\n                              top: '28px',\n                            }}\n                          >\n                            <use xlinkHref='#icon-user' />\n                          </svg>\n                          <NavLink to='/auth'>\n                            <span>Login / Signup</span>\n                          </NavLink>\n                        </li>\n                      )}\n\n                      {context.token && (\n                        <React.Fragment>\n                          <li className='current-menu-parent menu-item-has-children eric-active'>\n                            <NavLink to='/saveds'>Saved Jobs</NavLink>\n                          </li>\n                          <li className='current-menu-parent menu-item-has-children eric-active'>\n                            <NavLink to='/job/add'>Add New Job Opening</NavLink>\n                          </li>\n                          <li\n                            className='menu-item menu-item-type-post_type menu-item-object-page'\n                            style={{\n                              position: 'relative',\n                              paddingLeft: '30px',\n                            }}\n                          >\n                            <svg\n                              class='svg-icon icon-user'\n                              style={{\n                                position: 'absolute',\n                                left: '20px',\n                                top: '28px',\n                              }}\n                            >\n                              <use xlinkHref='#icon-user' />\n                            </svg>\n                            <NavLink\n                              to={`#${context.token}`}\n                              data-token-length={context.token.length}\n                              title={`You are logged-in as user ${\n                                context.email\n                              }`}\n                            >\n                              <span>You</span>\n                            </NavLink>\n                          </li>\n                          {context.token && (\n                            <li className='current-menu-parent menu-item-has-children'>\n                              <button\n                                className='btn transparent'\n                                onClick={context.logout}\n                              >\n                                <span>Logout</span>\n                              </button>\n                            </li>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </ul>\n                    <div id='site-mobile-menu-toggle'>\n                      <span className='eric-screen-reader-text'>Menu</span>\n                      <div\n                        className='mobile__button'\n                        onClick={this.toggleMobileMenuHandler}\n                      >\n                        <span />\n                        <span />\n                        <span />\n                        <span />\n                      </div>\n                    </div>\n                    <div id='site-mobile-menu' />\n\n                    <ul id='site-secondary-menu' className='menu'>\n                      <li className='eric-search'>\n                        <span className='eric-search-open'>\n                          <span className='fas fa-search'>\n                            <svg\n                              viewBox='0 0 100 100'\n                              className='svg-icon search'\n                            >\n                              <use xlinkHref='#icon-search' />\n                            </svg>\n                          </span>\n                        </span>\n                        <span className='eric-search-close'>\n                          <span className='fas fa-times' />\n                        </span>\n                        <form\n                          action='/'\n                          className='searchform eric-form'\n                          id='searchform-0'\n                          method='get'\n                          role='search'\n                          noValidate='novalidate'\n                        >\n                          <div>\n                            <label\n                              className='eric-screen-reader-text'\n                              htmlFor='s-0'\n                            >\n                              Search\n                            </label>\n                            <input\n                              id='s-0'\n                              name='s'\n                              placeholder='Search'\n                              type='text'\n                            />\n                            <button\n                              id='searchsubmit-0'\n                              title='Search'\n                              type='submit'\n                            >\n                              <span className='fas fa-search' />\n                            </button>\n                          </div>\n                        </form>\n                      </li>\n                      <li className='menu-item menu-item-type-custom menu-item-object-custom menu-item-38'>\n                        {!context.token && (\n                          <Link\n                            to='/auth'\n                            className='eric-button eric-button-white'\n                          >\n                            <span>Post A New Job</span>\n                          </Link>\n                        )}\n                        {context.token && (\n                          <button\n                            className='eric-button eric-button-transparent'\n                            onClick={context.logout}\n                          >\n                            <span>Logout</span>\n                          </button>\n                        )}\n                      </li>\n                      <li className='menu-item menu-item-type-post_type menu-item-object-page menu-item-40'>\n                        {context.token && (\n                          <Link\n                            to='/job/add'\n                            className='eric-button eric-button-white'\n                          >\n                            <span>Post A New Job</span>\n                          </Link>\n                        )}\n                      </li>\n                    </ul>\n                  </nav>\n                </header>\n              </div>\n            </section>\n          );\n        }}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nexport default mainNavigation;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AuthContext from '../../context/auth-context';\r\n\r\nconst Footer = (props) => (\r\n  <AuthContext.Consumer>\r\n    {(context) => {\r\n      return (\r\n        <section id='site-footer' style={{ marginBottom: '-1em' }}>\r\n          <footer>\r\n            <div className='eric-row'>\r\n              <div id='site-footer-menu-wrapper' className='eric-col-md-9'>\r\n                <ul id='site-footer-menu' className='menu'>\r\n                  <li className='menu-item menu-item-type-post_type menu-item-object-page'>\r\n                    <Link to='/jobs'>Jobs List</Link>\r\n                  </li>\r\n                  {context.token && (\r\n                    <li className='menu-item menu-item-type-post_type menu-item-object-page'>\r\n                      <Link to='/saveds'>Your Saved Jobs</Link>\r\n                    </li>\r\n                  )}\r\n                  <li className='menu-item menu-item-type-post_type menu-item-object-page'>\r\n                    {!context.token && <Link to='/auth'>Login / Signup</Link>}\r\n                    {context.token && (\r\n                      <Link to='/job/add'>Post New Job Opening</Link>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className='eric-col-md-3'>\r\n                <ul id='site-social-menu' className='menu'>\r\n                  <li className='fab fa-twitter menu-item menu-item-type-custom menu-item-object-custom menu-item-27'>\r\n                    <a\r\n                      title='Twitter'\r\n                      target='_blank'\r\n                      rel='noopener noreferrer'\r\n                      href='https://twitter.com'\r\n                    >\r\n                      Twitter\r\n                    </a>\r\n                  </li>\r\n                  <li className='fab fa-linkedin-in menu-item menu-item-type-custom menu-item-object-custom menu-item-28'>\r\n                    <a\r\n                      title='LinkedIn'\r\n                      target='_blank'\r\n                      rel='noopener noreferrer'\r\n                      href='https://www.linkedin.com'\r\n                    >\r\n                      LinkedIn\r\n                    </a>\r\n                  </li>\r\n                  <li className='fab fa-facebook-f menu-item menu-item-type-custom menu-item-object-custom menu-item-29'>\r\n                    <a\r\n                      title='Facebook'\r\n                      target='_blank'\r\n                      rel='noopener noreferrer'\r\n                      href='https://www.facebook.com'\r\n                    >\r\n                      Facebook\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className='eric-col-xs-12' id='site-copyright'>\r\n                <p>\r\n                  ©2022 JobBoard App &nbsp; &nbsp; &nbsp; | &nbsp; &nbsp; &nbsp;\r\n                  <Link to='/'>Privacy Policy</Link> &nbsp; &nbsp; &nbsp; |\r\n                  &nbsp; &nbsp; &nbsp;\r\n                  <Link to='/about'>About App</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </section>\r\n      );\r\n    }}\r\n  </AuthContext.Consumer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth';\nimport SavedsPage from './pages/Saveds';\nimport JobsPage from './pages/Jobs';\nimport AddJobPage from './pages/AddJobPage';\nimport JobItem from './pages/JobItem';\nimport AboutPage from './pages/AboutPage';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport Footer from './components/Navigation/Footer';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n    email: null,\n  };\n\n  login = (token, userId, email, tokenExpiration) => {\n    this.setState({ token: token, userId: userId, email: email });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null, email: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              email: this.state.email,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation />\n            <main className='main-content'>\n              <Switch>\n                <Redirect from='/' to='/jobs' exact />\n                {this.state.token && <Redirect from='/auth' to='/jobs' exact />}\n                {!this.state.token && (\n                  <Route path='/auth' component={AuthPage} />\n                )}\n                {this.state.token && (\n                  <Route path='/job/add' component={AddJobPage} />\n                )}\n                <Route path='/jobs' component={JobsPage} />\n                <Route path='/job/:jobId' component={JobItem} exact />\n                <Route path='/about' component={AboutPage} exact />\n\n                {this.state.token && (\n                  <Route path='/saveds' component={SavedsPage} />\n                )}\n                {!this.state.token && <Redirect to='/auth' exact />}\n              </Switch>\n            </main>\n            <Footer />\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}