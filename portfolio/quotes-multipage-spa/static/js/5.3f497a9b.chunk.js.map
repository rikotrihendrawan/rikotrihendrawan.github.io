{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/Quotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","sortQuotes","quotes","ascending","sort","quoteA","quoteB","QuoteList","history","useHistory","location","useLocation","console","log","queryParams","URLSearchParams","search","isSortingAscending","get","quotesArray","isSortingDescending","pathname","sorting","onClick","push","right","list","map","quote","NoQuotesFound","noquotes","Quotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,yFCqBdC,EAnBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CACEC,GAAE,iDAA4CN,EAAMO,IACpDN,UAAU,MAFZ,4B,iBCNAO,EAAa,SAACC,EAAQC,GAC1B,OAAOD,EAAOE,MAAK,SAACC,EAAQC,GAC1B,OAAkB,IAAdH,EACKE,EAAOR,KAAOS,EAAOT,KAAO,GAAK,GACjB,IAAdM,EACFE,EAAOR,KAAOS,EAAOT,KAAO,GAAK,EAEjCQ,EAAOL,GAAKM,EAAON,GAAK,GAAK,MA8D3BO,EAzDG,SAACd,GACjB,IAAMe,EAAUC,uBACVC,EAAWC,wBACjBC,QAAQC,IAAIH,GACZ,IAAMI,EAAc,IAAIC,gBAAgBL,EAASM,QAE3CC,EAAiD,QAA5BH,EAAYI,IAAI,QAC3CN,QAAQC,IAAII,GACZ,IAEIE,EAFEC,EAAkD,SAA5BN,EAAYI,IAAI,QAI1CC,EAAclB,EAAWR,EAAMS,OAD7Be,GAAsBG,EACeH,EAEA,YAGzCL,QAAQC,IAAIM,EAAaT,EAASW,UAalC,OACE,eAAC,WAAD,WACE,sBAAK3B,UAAWC,IAAQ2B,QAAxB,UACE,yBAAQC,QAdY,WAKxBf,EAAQgB,KAAK,CACXH,SAAUX,EAASW,SACnBL,OAAO,SAAD,OAAWC,EAAqB,OAAS,UAO7C,kBACQA,EAAqB,aAAe,eAE5C,cAAC,IAAD,CACEvB,UAAWC,IAAQ8B,MACnB1B,GAAG,yCAFL,yBAOF,oBAAIL,UAAWC,IAAQ+B,KAAvB,SACGP,EAAYQ,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEE5B,GAAI4B,EAAM5B,GACVF,OAAQ8B,EAAM9B,OACdD,KAAM+B,EAAM/B,MAHP+B,EAAM5B,a,iCCjDR6B,EAXO,WACpB,OACE,sBAAKnC,UAAWC,IAAQmC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM/B,GAAG,4CAA4CL,UAAU,MAA/D,6B,QCgDSqC,UA/BA,WACb,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKzC,UAAU,WAAf,SACE,cAAC8C,EAAA,EAAD,MAKFF,EACK,mBAAG5C,UAAU,iBAAb,SAA+B4C,IAGzB,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAWvC,OAAQkC,IAHjB,cAAC,EAAD","file":"static/js/5.3f497a9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__B5b6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__OOUwJ\",\"sorting\":\"QuoteList_sorting__3idIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2XxG1\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link\n        to={`/portfolio/quotes-multipage-spa/quotes/${props.id}`}\n        className='btn'\n      >\n        View Quote\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending === true) {\n      return quoteA.text > quoteB.text ? 1 : -1;\n    } else if (ascending === false) {\n      return quoteA.text < quoteB.text ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc'; // true or false\n  console.log(isSortingAscending);\n  const isSortingDescending = queryParams.get('sort') === 'desc';\n\n  let quotesArray;\n  if (isSortingAscending || isSortingDescending) {\n    quotesArray = sortQuotes(props.quotes, isSortingAscending);\n  } else {\n    quotesArray = sortQuotes(props.quotes, 'unsorted');\n  }\n\n  console.log(quotesArray, location.pathname);\n\n  const changeSortHandler = () => {\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n    // history.push(\n    //   `${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    // );\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n        <Link\n          className={classes.right}\n          to='/portfolio/quotes-multipage-spa/quotes'\n        >\n          Unsorted\n        </Link>\n      </div>\n      <ul className={classes.list}>\n        {quotesArray.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/portfolio/quotes-multipage-spa/add-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../components/hooks/use-http';\r\nimport { getAllQuotes } from '../components/lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\n/*\r\nconst DUMMY_QUOTES = [\r\n  { id: 'q1', author: 'Rocky', text: 'React is truly FUN!' },\r\n  {\r\n    id: 'q2',\r\n    author: 'Alexa',\r\n    text: 'Okulele Guitar is what I want to play',\r\n  },\r\n  { id: 'q3', author: 'My', text: 'Zumba is my escape dance' },\r\n  { id: 'q4', author: 'Max', text: 'Math is very interesting' },\r\n  { id: 'q5', author: 'Max', text: 'Ayam menyebrang jalan karena?' },\r\n  { id: 'q6', author: 'My', text: 'Cooking is my great passion!' },\r\n  { id: 'q7', author: 'Max', text: 'Physics is event more fun!' },\r\n  { id: 'q8', author: 'Rocky', text: 'FUN truly React is!' },\r\n];\r\n*/\r\n\r\nconst Quotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focus'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  // return <QuoteList quotes={DUMMY_QUOTES} />;\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default Quotes;\r\n"],"sourceRoot":""}